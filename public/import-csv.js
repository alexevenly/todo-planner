// CSV Import Helper for Kanban Board
class CSVImporter {
    constructor() {
        this.csvData = null;
    }

    // Parse CSV data from the attached file
    parseCSVData() {
        const csvText = `Task ID,Created At,Completed At,Last Modified,Name,Section/Column,Assignee,Assignee Email,Start Date,Due Date,Tags,Notes,Projects,Parent task,Blocked By (Dependencies),Blocking (Dependencies),Приоритет,Статус
"1211176346533592",2025-08-28,,2025-08-28,Ремонт дома,К исполнению,,,,,,,Дела,,,,Средний,По плану
"1211176346533596",2025-08-28,,2025-08-28,Ремонт двух диванов,,,,,,,,,Ремонт дома,,,,
"1211176346533597",2025-08-28,,2025-08-28,Покраска стен в белый,,,,,,,,,Ремонт дома,,,,
"1211176346533601",2025-08-28,,2025-08-28,Заказать на Тему шпаклевку,,,,,,,,,Покраска стен в белый,,,,
"1211176346533602",2025-08-28,,2025-08-28,Купить краску,,,,,,,,,Покраска стен в белый,,,,
"1211176346533603",2025-08-28,,2025-08-28,Ремонт косяка у балкона,,,,,,,,,Ремонт дома,,,,
"1211176346533605",2025-08-28,,2025-08-28,Купить белый герметик,,,,,,,,,Ремонт косяка у балкона,,,,
"1211176346533607",2025-08-28,,2025-08-28,Ремонт столика,,,,,,,,,Ремонт дома,,,,
"1211176346533612",2025-08-29,,2025-08-29,Кошковы,В процессе,,,,,,,Дела,,,,Высокий,Отстаёт
"1211176346533616",2025-08-29,2025-09-05,2025-09-05,Начать давать антибиотики,,,,,,,,,Кошковы,,,,
"1211176346533617",2025-08-29,,2025-08-29,Отнести каки Мушу после аб,,,,,,,,,Кошковы,,,,
"1211176343400176",2025-08-28,,2025-09-01,Шенген,В процессе,,,2025-08-29,2025-11-01,,"Получение Шенгенской визы Испании

",Дела,,,,Высокий,По плану
"1211176346533533",2025-08-28,2025-08-29,2025-08-29,Оплатить помогалу,,,,,,,,,Шенген,,,,
"1211176346533534",2025-08-28,,2025-08-28,Получить дату подачи,,,,,,,,,Шенген,,,,
"1211176346533535",2025-08-28,,2025-08-28,Выписка из банка,,,,,,,,,Шенген,,,,
"1211176346533536",2025-08-28,,2025-08-28,Спонсорское письмо,,,,,,,,,Шенген,,,,
"1211176346533537",2025-08-28,,2025-08-28,Бронь билетов,,,,,,,,,Шенген,,,,
"1211176346533538",2025-08-28,,2025-08-28,Бронь отеля,,,,,,,,,Шенген,,,,
"1211176346533539",2025-08-28,,2025-08-28,Анкеты,,,,,,,,,Шенген,,,,
"1211176346533540",2025-08-28,,2025-08-28,Подача,,,,,,,,,Шенген,,,,
"1211176346533541",2025-08-28,,2025-08-28,Получение,,,,,,,,,Шенген,,,,
"1211197072431629",2025-09-01,2025-09-02,2025-09-02,Скан всех загранов,,,,,,,,,Шенген,,,,
"1211197072431630",2025-09-01,,2025-09-01,Перевод на англ. св-ва о браке,,,,,,,,,Шенген,,,,
"1211197072431631",2025-09-01,,2025-09-01,Допник договора аренды,,,,,,,,,Шенген,,,,
"1211176346533575",2025-08-28,,2025-08-28,Продажа вещей,В процессе,,,,,,,Дела,,,,Средний,По плану
"1211176346533579",2025-08-28,,2025-08-28,Продать аэрофритюрницу,,,,,,,,,Продажа вещей,,,,
"1211176346533580",2025-08-28,,2025-08-28,Продать садик,,,,,,,,,Продажа вещей,,,,
"1211176346533581",2025-08-28,,2025-08-28,Продать рюкзаки,,,,,,,,,Продажа вещей,,,,
"1211176346533582",2025-08-28,,2025-08-28,Продать мониторы,,,,,,,,,Продажа вещей,,,,
"1211176346533583",2025-08-28,,2025-08-28,Отдать\\продать вентиляторы,,,,,,,,,Продажа вещей,,,,
"1211176346533566",2025-08-28,,2025-08-28,Упаковка вещей,В процессе,,,2025-08-29,2025-10-31,,,Дела,,,,Средний,По плану
"1211176346533570",2025-08-28,,2025-08-28,"Доупаковать все вещи, включая одежду, украшения, посуду и кошачьи игрушки, оставив только два чемодана вещей",,,,,,,,,Упаковка вещей,,,,
"1211176346533571",2025-08-28,,2025-08-28,Составить опись предметов,,,,,,,,,Упаковка вещей,,,,
"1211176346533572",2025-08-28,,2025-08-28,"Связаться с перевозчиком, заключить договор",,,,,,,,,Упаковка вещей,,,,
"1211176346533573",2025-08-28,,2025-08-28,Оплатить услуги,,,,,,,,,Упаковка вещей,,,,
"1211176346533574",2025-08-28,,2025-08-28,Отвезти вещи на склад,,,,,,,,,Упаковка вещей,,,,
"1211176648967035",2025-08-28,,2025-08-28,ВНЖ Испании,В процессе,,,,2025-11-01,,"Получение, отправка, обработка, перевод и заверение документов для ВНЖ Испании
Общение с помогалами",Дела,,,,Высокий,По плану
"1211176650039152",2025-08-28,,2025-08-28,Разобраться с трудовой книжкой,,,,,,,,,ВНЖ Испании,,,,
"1211176650039155",2025-08-28,,2025-09-05,Справки о несудимости,,,,,,Получение российской и сербской справок о несудимости,,ВНЖ Испании,,,,
"1211176650039167",2025-08-28,2025-09-05,2025-09-05,Справка о несудимости РФ,,,,,,,,,Справки о несудимости,,,,
"1211176650039170",2025-08-28,2025-08-28,2025-08-28,Податься на госуслугах,,,,,,,,,Справка о несудимости РФ,,,,
"1211176650039171",2025-08-28,2025-08-28,2025-08-28,Оплатить пошлину,,,,,,,,,Справка о несудимости РФ,,,,
"1211176650039172",2025-08-28,2025-09-05,2025-09-05,Доверенность на получение,,,,,,,,,Справка о несудимости РФ,,,,
"1211176650039174",2025-08-28,2025-09-05,2025-09-05,Получение,,,,,,,,,Справка о несудимости РФ,,,,
"1211176650039168",2025-08-28,,2025-08-28,Справка о несудимости Сербия,,,,,,,,,Справки о несудимости,,,,
"1211176650039175",2025-08-28,2025-08-29,2025-08-29,Копии загран паспорта и отчитанной картицы,,Alex Evenly,alexevenly90@gmail.com,,,,,,Справка о несудимости Сербия,,,,
"1211176650039177",2025-08-28,2025-08-29,2025-08-29,Оплатить пошлину,,,,,,,,,Справка о несудимости Сербия,,,,
"1211176650039178",2025-08-28,,2025-08-28,Подать заявление на справку в отделение местной полиции ,,,,,,,,,Справка о несудимости Сербия,,,,
"1211176650039179",2025-08-28,,2025-08-28,Получить готовую справку,,,,,,,,,Справка о несудимости Сербия,,,,
"1211176650039153",2025-08-28,,2025-08-28,Апостиль выписки из реестра Vision Apartments,,,,,,,,,ВНЖ Испании,,,,
"1211176650039154",2025-08-28,,2025-08-28,Письмо от клиента,,,,,,,,,ВНЖ Испании,,,,
"1211176650039157",2025-08-28,,2025-08-28,Банковская выписка,,,,,,,,,ВНЖ Испании,,,,
"1211176650039158",2025-08-28,,2025-08-28,Резюме (CV),,,,,,,,,ВНЖ Испании,,,,
"1211176650039159",2025-08-28,,2025-08-28,Анкеты,,,,,,,,,ВНЖ Испании,,,,
"1211176650039162",2025-08-28,,2025-08-28,Счета и акты,,,,,,,,,ВНЖ Испании,,,,
"1211176650039163",2025-08-28,,2025-08-28,Доверенности,,,,,,,,,ВНЖ Испании,,,,
"1211176650039164",2025-08-28,,2025-08-28,Обязательство встать на учет в испанский соцстрах,,,,,,,,,ВНЖ Испании,,,,
"1211176650039165",2025-08-28,,2025-08-28,Оплата пошлин,,,,,,,,,ВНЖ Испании,,,,
"1211176346533547",2025-08-28,,2025-08-29,Здоровье,В процессе,,,2025-08-29,2025-11-01,,,Дела,,,,Средний,По плану
"1211176346533549",2025-08-28,2025-09-05,2025-09-05,"Саша стоматолог, проверка импланта, швов, установка формирователя лунки",,,,,2025-09-04,,,,Здоровье,,,,
"1211176346533560",2025-08-28,2025-08-30,2025-08-30,Отнести писи и каки,,,,,,,,,Здоровье,,,,
"1211176346533550",2025-08-28,,2025-08-28,Саша стоматолог,,,,,,,,,Здоровье,,,,
"1211176346533551",2025-08-28,,2025-08-28,"Лида офтальмолог, проверка после операции",,,,,,,,,Здоровье,,,,
"1211176346533553",2025-08-28,,2025-08-28,Лида психиатр,,,,,,,,,Здоровье,,,,
"1211176346533554",2025-08-28,,2025-08-28,Саша гастроэнтеролог,,,,,,,,,Здоровье,,,,
"1211176346533557",2025-08-28,,2025-08-28,Саша УЗИ ОБП,,,,,,,,,Здоровье,,,,
"1211176346533558",2025-08-28,,2025-08-28,Лида УЗИ вен нижних конечностей,,,,,,,,,Здоровье,,,,
"1211176346533563",2025-08-28,,2025-08-28,Лида Гинеколог,,,,,,,,,Здоровье,,,,
"1211176346533609",2025-08-29,2025-09-05,2025-09-05,Лида осмотр стоматолога,,,,,,,,,Здоровье,,,,
"1211176346533610",2025-08-29,,2025-08-29,Лида Дерматолог,,,,,,,,,Здоровье,,,,
"1211176648967024",2025-08-28,2025-09-08,2025-09-08,Замена водительских прав на Сербские,Готово,,,,2025-09-30,,Замена водительских прав на Сербские для последующего (возможного) обмена в Испании,Дела,,,,Высокий,Отстаёт
"1211176648967028",2025-08-28,2025-08-28,2025-08-28,Перевод судебным переводчиком водительского удостоверения,,,,,,,,,Замена водительских прав на Сербские,,,,
"1211176648967029",2025-08-28,2025-08-28,2025-08-28,Справка о медосмотре,,,,,,,,,Замена водительских прав на Сербские,,,,
"1211176648967030",2025-08-28,2025-08-29,2025-08-29,"Копия загран паспорта, личной карты, водительского удостоверения РФ",,Alex Evenly,alexevenly90@gmail.com,,,,,,Замена водительских прав на Сербские,,,,
"1211176648967032",2025-08-28,2025-08-29,2025-08-29,Квитанция об оплате госпошлины,,,,,,,,,Замена водительских прав на Сербские,,,,
"1211176648967033",2025-08-28,2025-09-02,2025-09-02,Податься на замену,,,,,,,,,Замена водительских прав на Сербские,,,,
"1211176648967034",2025-08-28,2025-09-08,2025-09-08,Получить серсбкое ВУ,,,,,,,,,Замена водительских прав на Сербские,,,,
`;

        return this.parseCSV(csvText);
    }

    parseCSV(csvText) {
        const lines = csvText.split('\n');
        const headers = lines[0].split(',').map(h => h.replace(/"/g, '').trim());
        
        const tasks = [];
        const taskMap = new Map();
        
        // First pass: create all tasks
        for (let i = 1; i < lines.length; i++) {
            const line = lines[i].trim();
            if (!line) continue;
            
            const values = this.parseCSVLine(line);
            if (values.length < headers.length) continue;
            
            const task = {
                id: 'task-' + Date.now() + '-' + i,
                title: values[4] || 'Untitled Task', // Name column
                description: values[11] || '', // Notes column
                priority: this.mapPriority(values[16]), // Приоритет column
                status: values[17] || 'По плану', // Статус column
                labels: this.extractLabels(values),
                epic: values[12] || '', // Projects column
                parentTask: values[13] || '', // Parent task column
                dueDate: values[9] || '', // Due Date column
                createdAt: values[1] || new Date().toISOString(), // Created At column
                subtasks: [],
                subtasksExpanded: false
            };
            
            tasks.push(task);
            taskMap.set(task.title, task);
        }
        
        // Second pass: organize subtasks
        tasks.forEach(task => {
            if (task.parentTask && task.parentTask.trim()) {
                const parentTask = taskMap.get(task.parentTask.trim());
                if (parentTask) {
                    if (!parentTask.subtasks) {
                        parentTask.subtasks = [];
                    }
                    parentTask.subtasks.push({
                        id: task.id,
                        title: task.title,
                        completed: task.status === 'Готово' || task.status === 'Done',
                        subtasks: [] // Initialize subtasks array for nested subtasks
                    });
                } else {
                    console.log(`Parent task not found: "${task.parentTask}"`);
                }
            }
        });
        
        // Third pass: organize nested subtasks (subtasks of subtasks)
        console.log('Starting third pass: organizing nested subtasks');
        const processedTasks = new Set();
        tasks.forEach(task => {
            if (task.parentTask && task.parentTask.trim() && !processedTasks.has(task.id)) {
                const parentTask = taskMap.get(task.parentTask.trim());
                if (parentTask && parentTask.subtasks) {
                    // Check if this task is a subtask of a subtask
                    // Look for a subtask that has the same title as the parentTask
                    const parentSubtask = parentTask.subtasks.find(subtask => subtask.title === task.parentTask.trim());
                    if (parentSubtask) {
                        if (!parentSubtask.subtasks) {
                            parentSubtask.subtasks = [];
                        }
                        parentSubtask.subtasks.push({
                            id: task.id,
                            title: task.title,
                            completed: task.status === 'Готово' || task.status === 'Done'
                        });
                        processedTasks.add(task.id);
                    } else {
                        console.log(`Could not find parent subtask "${task.parentTask}" for task "${task.title}"`);
                    }
                }
            }
        });
        
        // Return only parent tasks (tasks without parentTask)
        return tasks.filter(task => !task.parentTask);
    }

    parseCSVLine(line) {
        const values = [];
        let current = '';
        let inQuotes = false;
        
        for (let i = 0; i < line.length; i++) {
            const char = line[i];
            
            if (char === '"') {
                inQuotes = !inQuotes;
            } else if (char === ',' && !inQuotes) {
                values.push(current.trim());
                current = '';
            } else {
                current += char;
            }
        }
        
        values.push(current.trim());
        return values;
    }

    mapPriority(priority) {
        const priorityMap = {
            'Высокий': 'high',
            'Средний': 'medium',
            'Низкий': 'low'
        };
        return priorityMap[priority] || 'medium';
    }

    extractLabels(values) {
        const labels = [];
        // Extract from Tags column (index 10)
        if (values[10]) {
            const tags = values[10].split(',').map(tag => tag.trim());
            labels.push(...tags);
        }
        return labels;
    }

    getColumnIdByStatus(status) {
        const statusMap = {
            'К исполнению': 'todo',
            'В процессе': 'in-progress',
            'Готово': 'done',
            'По плану': 'todo',
            'Отстаёт': 'in-progress'
        };
        return statusMap[status] || 'todo';
    }

    // Auto-import data if no existing data
    autoImportIfNeeded() {
        const savedData = localStorage.getItem('kanban-data');
        if (!savedData) {
            console.log('No existing data found, importing CSV data...');
            this.importData();
        }
    }

    importData() {
        const tasks = this.parseCSVData();
        const columns = [
            { id: 'todo', title: 'To Do', tasks: [] },
            { id: 'in-progress', title: 'In Progress', tasks: [] },
            { id: 'done', title: 'Done', tasks: [] }
        ];

        // Group tasks by status
        tasks.forEach(task => {
            const columnId = this.getColumnIdByStatus(task.status);
            const column = columns.find(c => c.id === columnId);
            if (column) {
                column.tasks.push(task.id);
            }
        });

        const data = {
            columns: columns,
            tasks: tasks,
            labels: [
                { name: 'Дела', color: '#3498db' },
                { name: 'Ремонт дома', color: '#e74c3c' },
                { name: 'Кошковы', color: '#f39c12' },
                { name: 'Шенген', color: '#9b59b6' },
                { name: 'Продажа вещей', color: '#1abc9c' },
                { name: 'Упаковка вещей', color: '#34495e' },
                { name: 'ВНЖ Испании', color: '#e67e22' },
                { name: 'Здоровье', color: '#27ae60' },
                { name: 'Замена водительских прав', color: '#8e44ad' }
            ],
            epics: ['Дела', 'Ремонт дома', 'Кошковы', 'Шенген', 'Продажа вещей', 'Упаковка вещей', 'ВНЖ Испании', 'Здоровье', 'Замена водительских прав']
        };

        localStorage.setItem('kanban-data', JSON.stringify(data));
        console.log(`Imported ${tasks.length} tasks successfully!`);
        
        return data;
    }
}

// Make CSVImporter available globally
window.CSVImporter = CSVImporter;

// Auto-import when the script loads
document.addEventListener('DOMContentLoaded', () => {
    const importer = new CSVImporter();
    importer.autoImportIfNeeded();
});
